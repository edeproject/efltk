// generated by Extended Fast Light User Interface Designer (eFluid) version 2.0003

#ifndef _WIDGET_PANEL_H_
#define _WIDGET_PANEL_H_

#include <efltk/Fl.h>
#include <efltk/Fl_Locale.h>
#include <efltk/Fl_Window.h>
#include <efltk/Fl_WM.h>
#include <efltk/Fl_Tabs.h>
#include <efltk/Fl_Group.h>
#include <efltk/Fl_Input.h>
#include <efltk/Fl_Choice.h>
#include <efltk/Fl_Box.h>
#include <efltk/Fl_Button.h>
#include <efltk/Fl_Check_Button.h>
#include <efltk/Fl_Value_Input.h>
#include "Shortcut_Button.h"
#include <efltk/Fl_Wordwrap_Input.h>
#include <efltk/Fl_Light_Button.h>
#include <efltk/Fl_Text_Editor.h>
#include <efltk/Fl_Divider.h>

extern void propagate_tabs(Fl_Tabs*, void*);
extern void propagate_group(Fl_Group*, void*);
extern void user_class_cb(Fl_Input*, void*);
extern void subtype_cb(Fl_Choice*, void*);
extern void label_cb(Fl_Input*, void*);
extern void image_cb(Fl_Button*, void*);
extern void image_inlined_cb(Fl_Check_Button*, void*);
extern void align_cb(Fl_Button*, void*);
extern void x_cb(Fl_Value_Input*, void*);
extern void y_cb(Fl_Value_Input*, void*);
extern void width_cb(Fl_Value_Input*, void*);
extern void height_cb(Fl_Value_Input*, void*);
extern void border_cb(Fl_Check_Button*, void*);
extern void set_xy_cb(Fl_Check_Button*, void*);
extern void modal_cb(Fl_Check_Button*, void*);
extern void non_modal_cb(Fl_Check_Button*, void*);
extern void value_cb(Fl_Value_Input*, void*);
extern void min_cb(Fl_Value_Input*, void*);
extern void max_cb(Fl_Value_Input*, void*);
extern void step_cb(Fl_Value_Input*, void*);
extern void line_cb(Fl_Value_Input*, void*);
extern void slider_size_cb(Fl_Value_Input*, void*);
extern void resizable_cb(Fl_Check_Button*, void*);
extern void hotspot_cb(Fl_Check_Button*, void*);
extern void visible_cb(Fl_Check_Button*, void*);
extern void active_cb(Fl_Check_Button*, void*);
extern void shortcut_in_cb(Shortcut_Button*, void*);
extern void tooltip_cb(Fl_Wordwrap_Input*, void*);
extern void layoutalign_cb(Fl_Choice*, void*);
extern void layoutspacing_cb(Fl_Value_Input*, void*);
extern void box_cb(Fl_Choice*, void*);
extern void color_cb(Fl_Light_Button*, void*);
extern void highlight_color_cb(Fl_Light_Button*, void*);
extern void button_box_cb(Fl_Choice*, void*);
extern void button_color_cb(Fl_Light_Button*, void*);
extern void selection_color_cb(Fl_Light_Button*, void*);
extern void focus_box_cb(Fl_Choice*, void*);
extern void label_type_cb(Fl_Choice*, void*);
extern void label_font_cb(Fl_Choice*, void*);
extern void label_size_cb(Fl_Value_Input*, void*);
extern void label_color_cb(Fl_Light_Button*, void*);
extern void highlight_label_color_cb(Fl_Light_Button*, void*);
extern void text_font_cb(Fl_Choice*, void*);
extern void text_size_cb(Fl_Value_Input*, void*);
extern void text_color_cb(Fl_Light_Button*, void*);
extern void selected_text_color_cb(Fl_Light_Button*, void*);
extern void default_cb(Fl_Button*, void*);
extern void name_cb(Fl_Input*, void*);
extern void name_public_cb(Fl_Check_Button*, void*);
extern void extra_code_input_cb(Fl_Text_Editor*, void*);
extern void callback_cb(Fl_Text_Editor*, void*);
extern void user_data_cb(Fl_Input*, void*);
extern void when_cb(Fl_Choice*, void*);
extern void user_data_type_cb(Fl_Input*, void*);
extern void overlay_cb(Fl_Check_Button*, void*);
extern int overlays_invisible;
extern void cancel_cb(Fl_Button*, void*);
extern void ok_cb(Fl_Button*, void*);

extern Fl_Tabs* panel_tabs;
extern Fl_Box* image_label;
extern Fl_Check_Button* include_image_button;
extern Fl_Value_Input* widget_x;
extern Fl_Value_Input* widget_y;
extern Fl_Value_Input* widget_width;
extern Fl_Value_Input* widget_height;
extern Fl_Check_Button* set_xy;
extern Fl_Text_Editor* extra_code_input;
extern Fl_Check_Button* overlaybutton;

Fl_Window* make_widget_panel();

#endif

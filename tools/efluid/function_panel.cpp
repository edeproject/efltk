// generated by Fast Light User Interface Designer (fluid) version 2,0003

#include "function_panel.h"

Fl_Window* function_panel;

Fl_Check_Button* f_public_button;

Fl_Check_Button* f_c_button;

Fl_Input* f_name_input;

Fl_Input* f_attributes_input;

Fl_Input* f_return_type_input;

Fl_Return_Button* f_panel_ok;

Fl_Button* f_panel_cancel;

Fl_Window* make_function_panel() {
  Fl_Window* w;
   {Fl_Window* o = function_panel = new Fl_Window(320, 208, _("function/method"));
    w = o;
     {Fl_Check_Button* o = f_public_button = new Fl_Check_Button(0, 3, 110, 22, _("public"));
      o->when(FL_WHEN_NEVER);
    }
    f_c_button = new Fl_Check_Button(110, 3, 205, 22, _("C declaration"));
     {Fl_Input* o = f_name_input = new Fl_Input(5, 48, 310, 22, _("Name(args): (blank for main())"));
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Input* o = f_attributes_input = new Fl_Input(5, 93, 310, 22, _("Attributes (virtual, static, __declspec, ...)"));
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Input* o = f_return_type_input = new Fl_Input(5, 138, 310, 22, _("Return Type: (blank to return outermost widget)"));
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Return_Button* o = f_panel_ok = new Fl_Return_Button(150, 183, 80, 22, _("OK"));
      o->shortcut(0xff0d);
      ((Fl_Window*)(o->parent()))->hotspot(o);
    }
     {Fl_Button* o = f_panel_cancel = new Fl_Button(235, 183, 80, 22, _("Cancel"));
      o->shortcut(0xff1b);
    }
    o->set_modal();
    o->end();
  }
  return  w;
}

Fl_Window* code_panel;

Fl_Text_Editor* code_input;

Fl_Button* code_panel_cancel;

Fl_Button* code_panel_ok;

Fl_Window* make_code_panel() {
  Fl_Window* w;
   {Fl_Window* o = code_panel = new Fl_Window(380, 281, _("code"));
    w = o;
     {Fl_Text_Editor* o = code_input = new Fl_Text_Editor(0, 0, 380, 245);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_NEVER);
      Fl_Group::current()->resizable(o);
      o->tooltip(_("Write your code here."));
      Fl_Text_Buffer *textbuf = new Fl_Text_Buffer;
      o->buffer(textbuf);
    }
     {Fl_Group* o = new Fl_Group(0, 244, 380, 36);
       {Fl_Button* o = code_panel_cancel = new Fl_Button(295, 8, 80, 23, _("&Cancel"));
        o->shortcut(0xff1b);
      }
      code_panel_ok = new Fl_Button(210, 8, 80, 23, _("&OK"));
       {Fl_Box* o = new Fl_Box(5, 11, 195, 15);
        o->parent()->resizable(o);
      }
      o->end();
    }
    o->set_modal();
    o->end();
  }
  return  w;
}

Fl_Window* codeblock_panel;

Fl_Input* code_before_input;

Fl_Input* code_after_input;

Fl_Return_Button* codeblock_panel_ok;

Fl_Button* codeblock_panel_cancel;

Fl_Window* make_codeblock_panel() {
  Fl_Window* w;
   {Fl_Window* o = codeblock_panel = new Fl_Window(290, 131, _("codeblock"));
    w = o;
     {Fl_Input* o = code_before_input = new Fl_Input(5, 11, 280, 22);
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Box* o = new Fl_Box(5, 33, 280, 33, _("\"{...child code...}\" is inserted here"));
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
     {Fl_Input* o = code_after_input = new Fl_Input(5, 65, 280, 23);
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Return_Button* o = codeblock_panel_ok = new Fl_Return_Button(120, 103, 80, 22, _("OK"));
      o->shortcut(0xff0d);
      ((Fl_Window*)(o->parent()))->hotspot(o);
    }
     {Fl_Button* o = codeblock_panel_cancel = new Fl_Button(205, 103, 80, 22, _("Cancel"));
      o->shortcut(0xff1b);
    }
    o->set_modal();
    o->end();
  }
  return  w;
}

Fl_Window* declblock_panel;

Fl_Input* decl_before_input;

Fl_Input* decl_after_input;

Fl_Return_Button* declblock_panel_ok;

Fl_Button* declblock_panel_cancel;

Fl_Window* make_declblock_panel() {
  Fl_Window* w;
   {Fl_Window* o = declblock_panel = new Fl_Window(290, 131, _("declaration block"));
    w = o;
     {Fl_Input* o = decl_before_input = new Fl_Input(5, 11, 280, 22);
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Box* o = new Fl_Box(5, 33, 280, 33, _("\"\\n...child code...\\n\" is inserted here"));
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
     {Fl_Input* o = decl_after_input = new Fl_Input(5, 66, 280, 22);
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Return_Button* o = declblock_panel_ok = new Fl_Return_Button(120, 103, 80, 22, _("OK"));
      o->shortcut(0xff0d);
      ((Fl_Window*)(o->parent()))->hotspot(o);
    }
     {Fl_Button* o = declblock_panel_cancel = new Fl_Button(205, 103, 80, 22, _("Cancel"));
      o->shortcut(0xff1b);
    }
    o->set_modal();
    o->end();
  }
  return  w;
}

Fl_Window* decl_panel;

Fl_Check_Button* decl_public_button;

Fl_Input* decl_input;

Fl_Return_Button* decl_panel_ok;

Fl_Button* decl_panel_cancel;

Fl_Window* make_decl_panel() {
  Fl_Window* w;
   {Fl_Window* o = decl_panel = new Fl_Window(290, 170, _("declaration"));
    w = o;
     {Fl_Check_Button* o = decl_public_button = new Fl_Check_Button(5, 3, 280, 27, _("public"));
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Input* o = decl_input = new Fl_Input(5, 33, 280, 22, _("can be any declartion, like \"int x;\",\nan external symbol like \"extern int\
 foo();\",\na #directive like \"#include <foo.h>\",\nor a comment like \"//foo\
\" or \"/*foo*/\""));
      o->label_size(10);
      o->align(FL_ALIGN_BOTTOM | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Return_Button* o = decl_panel_ok = new Fl_Return_Button(120, 143, 80, 22, _("OK"));
      o->shortcut(0xff0d);
      ((Fl_Window*)(o->parent()))->hotspot(o);
    }
     {Fl_Button* o = decl_panel_cancel = new Fl_Button(205, 143, 80, 22, _("Cancel"));
      o->shortcut(0xff1b);
    }
    o->end();
  }
  return  w;
}

Fl_Window* class_panel;

Fl_Check_Button* c_public_button;

Fl_Input* c_name_input;

Fl_Input* c_subclass_input;

Fl_Button* c_panel_cancel;

Fl_Button* c_panel_ok;

Fl_Window* make_class_panel() {
  Fl_Window* w;
   {Fl_Window* o = class_panel = new Fl_Window(280, 164, _("class"));
    w = o;
     {Fl_Check_Button* o = c_public_button = new Fl_Check_Button(5, 3, 270, 22, _("public"));
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Input* o = c_name_input = new Fl_Input(5, 44, 270, 22, _("name:"));
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Input* o = c_subclass_input = new Fl_Input(5, 89, 270, 21, _("subclass of (text between : and {)"));
      o->align(FL_ALIGN_TOP | FL_ALIGN_LEFT);
      o->when(FL_WHEN_NEVER);
    }
     {Fl_Button* o = c_panel_cancel = new Fl_Button(195, 138, 80, 22, _("Cancel"));
      o->shortcut(0xff1b);
    }
     {Fl_Button* o = c_panel_ok = new Fl_Button(110, 138, 80, 22, _("OK"));
      o->shortcut(0xff1b);
    }
    o->set_modal();
    o->end();
  }
  return  w;
}

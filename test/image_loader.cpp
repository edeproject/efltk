// generated by Fast Light User Interface Designer (fluid) version 2,0003

#include "image_loader.h"
#include <efltk/Fl_Images.h>
static Fl_Image *image=0;

Fl_Box* imbox;

Fl_Box* filename_box;

static void cb_Load(Fl_Button*, void*) {
  const char *f = fl_select_file(0, "Image Files, *.{bmp|png|jpg|jpeg|xpm|gif}", "Select File");
  if(f) {
  	if(image) {
  		delete image;
  	}
  	image = Fl_Image::read(f);
  	imbox->image(image);
  	imbox->redraw();
  	filename_box->label(f);
  } else {
  	filename_box->label("No file loaded...");
  }
  filename_box->redraw();
}

static void cb_Exit(Fl_Button* o, void*) {
  o->window()->hide();
}

static void cb_Fit(Fl_Button* o, void*) {
  if(o->value()) {
  	imbox->align(imbox->align()|FL_ALIGN_SCALE);
  } else {
  	imbox->align(imbox->align()&~FL_ALIGN_SCALE);
  }
  imbox->redraw();
}

static void cb_Tile(Fl_Button* o, void*) {
  if(o->value()) {
  	imbox->align(imbox->align()|FL_ALIGN_TILED);
  } else {
  	imbox->align(imbox->align()&~FL_ALIGN_TILED);
  }
  imbox->redraw();
}

Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
   {Fl_Double_Window* o = new Fl_Double_Window(560, 489);
    w = o;
    o->type(241);
     {Fl_Box* o = imbox = new Fl_Box(5, 30, 385, 455);
      o->box(FL_BORDER_BOX);
      Fl_Group::current()->resizable(o);
    }
     {Fl_Box* o = filename_box = new Fl_Box(5, 5, 385, 20, "No file loaded...");
      o->box(FL_THIN_UP_BOX);
    }
     {Fl_Group* o = new Fl_Group(395, 5, 160, 480);
      o->box(FL_BORDER_BOX);
       {Fl_Button* o = new Fl_Button(5, 5, 150, 25, "Load File");
        o->callback((Fl_Callback*)cb_Load);
      }
       {Fl_Button* o = new Fl_Button(5, 35, 150, 25, "Exit");
        o->callback((Fl_Callback*)cb_Exit);
      }
      new Fl_Divider(5, 70, 150, 15, "label");
       {Fl_Button* o = new Fl_Button(5, 95, 150, 25, "Fit To Box");
        o->type(Fl_Button::TOGGLE);
        o->callback((Fl_Callback*)cb_Fit);
      }
       {Fl_Button* o = new Fl_Button(5, 125, 150, 25, "Tile");
        o->type(Fl_Button::TOGGLE);
        o->callback((Fl_Callback*)cb_Tile);
      }
      o->end();
    }
    o->end();
  }
  return  w;
}

int main(int argc, char *argv[]) {
  fl_init_images_lib();
  Fl_Window *w = make_window();
  w->show();
  
  return Fl::run();
}

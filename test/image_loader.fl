# data file for the FLTK User Interface Designer (FLUID)
version 2,0003 
header_name {.h} 
code_name {.cpp} 
gridx 5 
gridy 5 
snap 3
decl {\#include <efltk/Fl_Images.h>} {} 

decl {Fl_Image *image=0;} {} 

Function {make_window()} {open
} {
  Fl_Window {} {open
    xywh {62 77 560 489} type Double resizable visible
  } {
    Fl_Box imbox {
      xywh {5 30 385 455} resizable box BORDER_BOX
    }
    Fl_Box filename_box {
      label {No file loaded...}
      xywh {5 5 385 20} box THIN_UP_BOX
    }
    Fl_Group {} {open
      xywh {395 5 160 480} box BORDER_BOX
    } {
      Fl_Button {} {
        label {Load File}
        callback {const char *f = fl_select_file(0, "Image Files, *.{bmp|png|jpg|jpeg|xpm|gif}", "Select File");
if(f) {
	if(image) {
		delete image;
	}
	image = Fl_Image::read(f);
	imbox->image(image);
	imbox->redraw();
	filename_box->label(f);
} else {
	filename_box->label("No file loaded...");
}
filename_box->redraw();}
        xywh {5 5 150 25}
        extra_code {\#include <efltk/Fl_File_Dialog.h>}
      }
      Fl_Button {} {
        label Exit
        callback {o->window()->hide();}
        xywh {5 35 150 25}
      }
      Fl_Divider {} {
        label label
        xywh {5 70 150 15}
      }
      Fl_Button {} {
        label {Fit To Box}
        callback {if(o->value()) {
	imbox->align(imbox->align()|FL_ALIGN_SCALE);
} else {
	imbox->align(imbox->align()&~FL_ALIGN_SCALE);
}
imbox->redraw();}
        xywh {5 95 150 25} type TOGGLE
      }
      Fl_Button {} {
        label Tile
        callback {if(o->value()) {
	imbox->align(imbox->align()|FL_ALIGN_TILED);
} else {
	imbox->align(imbox->align()&~FL_ALIGN_TILED);
}
imbox->redraw();}
        xywh {5 125 150 25} type TOGGLE
      }
    }
  }
} 

Function {main(int argc, char *argv[])} {open return_type int
} {
  code {fl_init_images_lib();
Fl_Window *w = make_window();
w->show();

return Fl::run();} {selected
  }
} 

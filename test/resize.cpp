// generated by Fast Light User Interface Designer (fluid) version 2,0003

#include "resize.h"

static void cb_8(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->position(w->x(),w->y()-50);
}

static void cb_(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->position(w->x()-50,w->y());
}

static void cb_1(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->position(w->x()+50,w->y());
}

static void cb_2(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->position(w->x(),w->y()+50);
}

static void cb_grow(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->size(w->w()+20, w->h()+20);
}

static void cb_shrink(Fl_Button* o, void*) {
  Fl_Window* w = o->window();
  w->size(w->w()-20, w->h()-20);
}

int main (int argc, char **argv) {

  Fl_Window* w;
   {Fl_Window* o = new Fl_Window(320, 245);
    w = o;
     {Fl_Button* o = new Fl_Button(60, 0, 39, 40, "@8->");
      o->label_type(FL_SYMBOL_LABEL);
      o->callback((Fl_Callback*)cb_8);
    }
     {Fl_Box* o = new Fl_Box(148, 10, 157, 223, "This is a test of program-generated resize() of a window.  The window should \
move or resize once when each button is clicked.  The program and window manag\
er should not go into fits echoing resizes back and forth!");
      o->box(FL_BORDER_BOX);
      o->align(132|FL_ALIGN_INSIDE);
      Fl_Group::current()->resizable(o);
    }
     {Fl_Button* o = new Fl_Button(20, 40, 40, 41, "@<-");
      o->label_type(FL_SYMBOL_LABEL);
      o->callback((Fl_Callback*)cb_);
    }
     {Fl_Button* o = new Fl_Button(99, 40, 39, 41, "@->");
      o->label_type(FL_SYMBOL_LABEL);
      o->callback((Fl_Callback*)cb_1);
    }
     {Fl_Button* o = new Fl_Button(60, 81, 39, 40, "@2->");
      o->label_type(FL_SYMBOL_LABEL);
      o->callback((Fl_Callback*)cb_2);
    }
     {Fl_Button* o = new Fl_Button(30, 131, 108, 41, "grow");
      o->label_font(fl_fonts+1);
      o->label_type(FL_SYMBOL_LABEL);
      o->label_size(18);
      o->callback((Fl_Callback*)cb_grow);
    }
     {Fl_Button* o = new Fl_Button(30, 192, 108, 41, "shrink");
      o->label_font(fl_fonts+1);
      o->label_type(FL_SYMBOL_LABEL);
      o->label_size(18);
      o->callback((Fl_Callback*)cb_shrink);
    }
    o->end();
  }
  w->show(argc, argv);
  return  Fl::run();
}

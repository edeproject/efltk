
# directories
PREFIXDIR = /usr/local ;
BINDIR = $(PREFIXDIR)/bin ;
INCDIR = $(PREFIXDIR)/include ;
LIBDIR = $(PREFIXDIR)/lib ;

API_VERSION ?= 2.0 ;

#EFLTK_BUILDDIR ?= /home/sanel/blentavo/EDE/efltk ;
EFLTK_BUILDDIR ?= /home/sanelz/programs/EDE/efltk ;

EFLTK_BINDIR   ?= $(EFLTK_BUILDDIR)/bin ;
EFLTK_LIBDIR   ?= $(EFLTK_BUILDDIR)/lib ;
EFLTK_INCDIR   ?= $(EFLTK_BUILDDIR)/efltk ;

COREFILES_DIR   ?= $(EFLTK_BUILDDIR)/src/core ;
WIDGESFILES_DIR ?= $(EFLTK_BUILDDIR)/src/widgets ;
IMAGESFILES_DIR ?= $(EFLTK_BUILDDIR)/src/images ;
OPENGLFILES_DIR ?= $(EFLTK_BUILDDIR)/src/opengl ;
DBFILES_DIR     ?= $(EFLTK_BUILDDIR)/src/db ;
NETFILES_DIR    ?= $(EFLTK_BUILDDIR)/src/net ;
XMLFILES_DIR    ?= $(EFLTK_BUILDDIR)/src/xml ;

EFLUID_DIR      ?= $(EFLTK_BUILDDIR)/tools/efluid ;
ECALC_DIR       ?= $(EFLTK_BUILDDIR)/tools/ecalc ;
ETRANSLATE_DIR  ?= $(EFLTK_BUILDDIR)/tools/etranslate ;

EFLUID          ?= $(EFLTK_BINDIR)/efluid ;
ECALC           ?= $(EFLTK_BINDIR)/ecalc ;
ETRANSLATE      ?= $(EFLTK_BINDIR)/etranslate ;

SHAREDFLAGS ?= ;

if $(SHARED)
{
	LIBEXT = .so.$(API_VERSION) ;
	SHAREDFLAGS = -fPIC -DFL_LIBRARY -DFL_SHARED ;
}
else
{
	SHAREDFLAGS = ;
	LIBEXT = .a ;
}

# flags
WALL        ?= -Wall ;
CFLAGS		?= $(SHAREDFLAGS) -DHAVE_CONFIG_H -I$(EFLTK_BUILDDIR) $(WALL) -fexceptions -I/usr/X11R6/include -g3 -D_DEBUG ;
C++FLAGS	?= $(SHAREDFLAGS) -DHAVE_CONFIG_H -I$(EFLTK_BUILDDIR) $(WALL) -fexceptions -I/usr/X11R6/include -g3 -D_DEBUG ;
OPTIM       = ;


# efltk libs
FLLIB		?= $(EFLTK_BUILDDIR)/lib/libefltk$(LIBEXT) ;
FLGLLIB		?= $(EFLTK_BUILDDIR)/lib/libefltk_gl$(LIBEXT) ;
FLIMAGESLIB	?= $(EFLTK_BUILDDIR)/lib/libefltk_images$(LIBEXT) ;
FLXMLLIB	?= $(EFLTK_BUILDDIR)/lib/libefltk_xml$(LIBEXT) ;
FLODBCLIB	?= $(EFLTK_BUILDDIR)/lib/libefltk_odbc$(LIBEXT) ;
FLMYSQLLIB	?= $(EFLTK_BUILDDIR)/lib/libefltk_mysql$(LIBEXT) ;
FLNETLIB	?= $(EFLTK_BUILDDIR)/lib/libefltk_net$(LIBEXT) ;

FLLIB_LINK       ?= -lefltk ;
FLGLLIB_LINK     ?= -lefltk_gl ;
FLIMAGESLIB_LINK ?= -lefltk_images ;
FLXMLLIB_LINK    ?= -lefltk_xml ;
FLODBCLIB_LINK   ?= -lefltk_odbc ;
FLMYSQLLIB_LINK  ?= -lefltk_mysql ;
FLNETLIB_LINK    ?= -lefltk_net ;

# external libs
THREADSLIBS	?= -lpthread ;
JPEGLIBS	?=  -ljpeg ;
PNGLIBS		?=  -lpng -lz ;

# unixODBC stuff
UNIXODBCLIB ?=  ;

# MySQL stuff
MYSQLLIBS   ?=  ;
MYSQLFLAGS  ?=  ;

# libraries to link with:
LDLIBS		?=  -L$(EFLTK_LIBDIR) $(FLLIB_LINK) -L/usr/X11R6/lib -lX11 -lXext -lm -lstdc++ ;
DSOLIBS		?=  ;
THEMELIBS	?=  ;
GLDLIBS		?= $(FLGLLIB_LINK)  -lGLU -lGL ;
IMAGELIBS	?= $(FLIMAGESLIB_LINK) $(JPEGLIBS) $(PNGLIBS) ;
XMLLIBS		?= $(FLXMLLIB_LINK) ;
ODBCLIBS	?= $(FLODBCLIB_LINK) $(UNIXODBCLIB) ;
MYSQLLIBS	?= $(FLMYSQLLIB_LINK) $(MYSQLLIBS) ;


# Creates library depending on SHARED flag. If is true, shared library is created,
# otherwise static.
# Used as BuildLibrary NAME : objects ;
rule BuildLibrary
{
	if $(SHARED)
	{
		if $(UNIX)
		{
			SUFEXE = $(LIBEXT) ;
			LINKFLAGS on $(<) = -shared -Wl,-soname,$(<:D=) ;
			Main $(<) : $(>) ;
			InstallLibrary $(LIBDIR) : $(<) ;
		}
		else
		{
			ECHO "Shared libraries via jam are only supported on unix-like platform with gcc." ;
			EXIT "As fallback you still can run plain old boring make." ;
		}
	}
	else
	{
		InstallLibrary $(LIBDIR) : $(<:S=) ;
	}

}

# Same rule as in ede package
# althought does not use install tool.
rule InstallLibrary
{
	local t ;
	t = $(>:BSR=$(<):G=installed) ;

	# create directory if does not exists
	MkDir $(<) ;

	DEPENDS install : $(t) ;
	DEPENDS $(t) : $(<) $(>) ;
	InstallLibrary1 $(t) : $(>) ;
	InstallHeaders install : $(EFLTK_INCDIR) ;

	# remove file from binpath/filename
	Clean uninstall : $(t) ;
}

actions quietly InstallLibrary1
{
	echo "InstallLibrary $(>)" 
	$(CP) $(>) $(<)
}

rule InstallHeaders
{
	Bulk $(INCDIR) : $(>) ;
}
